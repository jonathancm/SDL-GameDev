# CFLAGS=-c -Wall
# #LDFLAGS=
# SOURCES=main.cpp hello.cpp factorial.cpp
# OBJECTS=$(SOURCES:.cpp=.o)
# EXECUTABLE=hello

# all:
# 	$(CC) $(CFLAGS) main.cpp hello.cpp factorial.cpp -o hello

# clean:
# 	rm -rf *o hello


#Taken from http://www.willusher.io/sdl2%20tutorials/2013/08/15/lesson-0-linux-command-line/
CC = g++
# Update these paths to match your installation
# You may also need to update the linker option rpath, which sets where to look for
# the SDL2 libraries at runtime to match your install
#SDL_LIB = -L/usr/local/lib -lSDL2 -Wl,-rpath=/usr/local/lib
SDL_LIB = -L/usr/local/lib -lSDL2 -lSDL2_image -lSDL2_mixer -Wl,-rpath=/usr/local/lib 
SDL_INCLUDE = -I/usr/include
# You may need to change -std=c++11 to -std=c++0x if your compiler is a bit older
CCFLAGS = -Wall -c -std=c++11 $(SDL_INCLUDE)
LDFLAGS = $(SDL_LIB)
EXE = SDLChapter3.0

all: $(EXE)

Game.o: Game.cpp
	$(CC) $(CCFLAGS) $< -o $@

TextureManager.o: TextureManager.cpp
	$(CC) $(CCFLAGS) $< -o $@

GameObject.o: GameObject.cpp
	$(CC) $(CCFLAGS) $< -o $@

Player.o: Player.cpp
	$(CC) $(CCFLAGS) $< -o $@

main.o: main.cpp
	$(CC) $(CCFLAGS) $< -o $@

# $(EXE): main.o Game.o TextureManager.o
# 	$(CC) $< $(LDFLAGS) -o $@

$(EXE): 
	$(CC) main.o Game.o TextureManager.o GameObject.o Player.o $(LDFLAGS) -o $@


clean:
	rm *.o && rm $(EXE)